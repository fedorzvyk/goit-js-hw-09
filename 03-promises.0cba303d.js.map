{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SA4BvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CApCbL,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOjB,EAAQK,MAAMa,OAClCC,EAAYF,OAAOjB,EAAQoB,KAAKF,OAChCG,EAAcJ,OAAOjB,EAAQsB,OAAOJ,OAExC,IAAK,IAAIK,EAAW,EAAGA,GAAYF,EAAaE,GAAY,EAC1DpB,EAAcoB,EAAUP,GACrBQ,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoBzB,QAAeC,MAAU,IAGnDW,GAAcG,EAEhBL,EAAEgB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delayValue = Number(formRef.delay.value);\n  let stepValue = Number(formRef.step.value);\n  let amountValue = Number(formRef.amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delayValue","Number","value","stepValue","step","amountValue","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.0cba303d.js.map"}